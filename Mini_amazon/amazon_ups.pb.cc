// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon_ups.proto

#include "amazon_ups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AWarehouse_amazon_5fups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Deliver_amazon_5fups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Delivered_amazon_5fups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Product_amazon_5fups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Truck_amazon_5fups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_amazon_5fups_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Order_amazon_5fups_2eproto;
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product> _instance;
} _Product_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order> _instance;
} _Order_default_instance_;
class DeliverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Deliver> _instance;
} _Deliver_default_instance_;
class AWarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AWarehouse> _instance;
} _AWarehouse_default_instance_;
class AUCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUCommands> _instance;
} _AUCommands_default_instance_;
class TruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Truck> _instance;
} _Truck_default_instance_;
class DeliveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Delivered> _instance;
} _Delivered_default_instance_;
class UACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UACommands> _instance;
} _UACommands_default_instance_;
static void InitDefaultsProduct_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Product_default_instance_;
    new (ptr) ::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Product::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Product_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProduct_amazon_5fups_2eproto}, {}};

static void InitDefaultsOrder_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Order_default_instance_;
    new (ptr) ::Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Order::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Order_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrder_amazon_5fups_2eproto}, {
      &scc_info_Product_amazon_5fups_2eproto.base,}};

static void InitDefaultsDeliver_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Deliver_default_instance_;
    new (ptr) ::Deliver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Deliver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Deliver_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeliver_amazon_5fups_2eproto}, {}};

static void InitDefaultsAWarehouse_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AWarehouse_default_instance_;
    new (ptr) ::AWarehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AWarehouse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AWarehouse_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAWarehouse_amazon_5fups_2eproto}, {}};

static void InitDefaultsAUCommands_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AUCommands_default_instance_;
    new (ptr) ::AUCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUCommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AUCommands_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAUCommands_amazon_5fups_2eproto}, {
      &scc_info_Order_amazon_5fups_2eproto.base,
      &scc_info_Deliver_amazon_5fups_2eproto.base,
      &scc_info_AWarehouse_amazon_5fups_2eproto.base,}};

static void InitDefaultsTruck_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Truck_default_instance_;
    new (ptr) ::Truck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Truck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Truck_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTruck_amazon_5fups_2eproto}, {}};

static void InitDefaultsDelivered_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Delivered_default_instance_;
    new (ptr) ::Delivered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Delivered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Delivered_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelivered_amazon_5fups_2eproto}, {}};

static void InitDefaultsUACommands_amazon_5fups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UACommands_default_instance_;
    new (ptr) ::UACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UACommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UACommands_amazon_5fups_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUACommands_amazon_5fups_2eproto}, {
      &scc_info_Truck_amazon_5fups_2eproto.base,
      &scc_info_Delivered_amazon_5fups_2eproto.base,}};

void InitDefaults_amazon_5fups_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Product_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Order_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Deliver_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AWarehouse_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AUCommands_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Truck_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Delivered_amazon_5fups_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UACommands_amazon_5fups_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_amazon_5fups_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_amazon_5fups_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_amazon_5fups_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_amazon_5fups_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Product, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Product, id_),
  PROTOBUF_FIELD_OFFSET(::Product, description_),
  PROTOBUF_FIELD_OFFSET(::Product, amount_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::Order, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Order, whid_),
  PROTOBUF_FIELD_OFFSET(::Order, x_),
  PROTOBUF_FIELD_OFFSET(::Order, y_),
  PROTOBUF_FIELD_OFFSET(::Order, packageid_),
  PROTOBUF_FIELD_OFFSET(::Order, upsusername_),
  PROTOBUF_FIELD_OFFSET(::Order, item_),
  PROTOBUF_FIELD_OFFSET(::Order, seqnum_),
  1,
  2,
  5,
  3,
  0,
  ~0u,
  4,
  PROTOBUF_FIELD_OFFSET(::Deliver, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Deliver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Deliver, packageid_),
  PROTOBUF_FIELD_OFFSET(::Deliver, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::AWarehouse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AWarehouse, id_),
  PROTOBUF_FIELD_OFFSET(::AWarehouse, x_),
  PROTOBUF_FIELD_OFFSET(::AWarehouse, y_),
  PROTOBUF_FIELD_OFFSET(::AWarehouse, seqnum_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::AUCommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AUCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AUCommands, order_),
  PROTOBUF_FIELD_OFFSET(::AUCommands, todeliver_),
  PROTOBUF_FIELD_OFFSET(::AUCommands, whinfo_),
  PROTOBUF_FIELD_OFFSET(::AUCommands, acks_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::Truck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Truck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Truck, whid_),
  PROTOBUF_FIELD_OFFSET(::Truck, truckid_),
  PROTOBUF_FIELD_OFFSET(::Truck, packageid_),
  PROTOBUF_FIELD_OFFSET(::Truck, seqnum_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::Delivered, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Delivered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Delivered, packageid_),
  PROTOBUF_FIELD_OFFSET(::Delivered, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::UACommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::UACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UACommands, arrived_),
  PROTOBUF_FIELD_OFFSET(::UACommands, finish_),
  PROTOBUF_FIELD_OFFSET(::UACommands, acks_),
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Product)},
  { 11, 23, sizeof(::Order)},
  { 30, 37, sizeof(::Deliver)},
  { 39, 48, sizeof(::AWarehouse)},
  { 52, 61, sizeof(::AUCommands)},
  { 65, 74, sizeof(::Truck)},
  { 78, 85, sizeof(::Delivered)},
  { 87, 95, sizeof(::UACommands)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Deliver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Truck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Delivered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UACommands_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_amazon_5fups_2eproto = {
  {}, AddDescriptors_amazon_5fups_2eproto, "amazon_ups.proto", schemas,
  file_default_instances, TableStruct_amazon_5fups_2eproto::offsets,
  file_level_metadata_amazon_5fups_2eproto, 8, file_level_enum_descriptors_amazon_5fups_2eproto, file_level_service_descriptors_amazon_5fups_2eproto,
};

const char descriptor_table_protodef_amazon_5fups_2eproto[] =
  "\n\020amazon_ups.proto\":\n\007Product\022\n\n\002id\030\001 \002("
  "\005\022\023\n\013description\030\002 \002(\t\022\016\n\006amount\030\003 \002(\005\"{"
  "\n\005Order\022\014\n\004whid\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 "
  "\002(\005\022\021\n\tpackageid\030\004 \002(\003\022\023\n\013upsusername\030\005 "
  "\002(\t\022\026\n\004item\030\006 \003(\0132\010.Product\022\016\n\006seqnum\030\007 "
  "\002(\003\",\n\007Deliver\022\021\n\tpackageid\030\001 \002(\003\022\016\n\006seq"
  "num\030\002 \002(\003\">\n\nAWarehouse\022\n\n\002id\030\001 \002(\005\022\t\n\001x"
  "\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\022\016\n\006seqnum\030\004 \002(\003\"k\n\nAUC"
  "ommands\022\025\n\005order\030\001 \003(\0132\006.Order\022\033\n\ttodeli"
  "ver\030\002 \003(\0132\010.Deliver\022\033\n\006whinfo\030\003 \003(\0132\013.AW"
  "arehouse\022\014\n\004acks\030\004 \003(\003\"I\n\005Truck\022\014\n\004whid\030"
  "\001 \002(\005\022\017\n\007truckid\030\002 \002(\005\022\021\n\tpackageid\030\003 \002("
  "\003\022\016\n\006seqnum\030\004 \002(\003\".\n\tDelivered\022\021\n\tpackag"
  "eid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\"O\n\nUACommands\022"
  "\027\n\007arrived\030\001 \003(\0132\006.Truck\022\032\n\006finish\030\002 \003(\013"
  "2\n.Delivered\022\014\n\004acks\030\003 \003(\003"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_amazon_5fups_2eproto = {
  false, InitDefaults_amazon_5fups_2eproto, 
  descriptor_table_protodef_amazon_5fups_2eproto,
  "amazon_ups.proto", &assign_descriptors_table_amazon_5fups_2eproto, 626,
};

void AddDescriptors_amazon_5fups_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_amazon_5fups_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_amazon_5fups_2eproto = []() { AddDescriptors_amazon_5fups_2eproto(); return true; }();

// ===================================================================

void Product::InitAsDefaultInstance() {
}
class Product::HasBitSetters {
 public:
  static void set_has_id(Product* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_description(Product* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_amount(Product* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kIdFieldNumber;
const int Product::kDescriptionFieldNumber;
const int Product::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:Product)
}

void Product::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Product_amazon_5fups_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(amount_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:Product)
  SharedDtor();
}

void Product::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Product& Product::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Product_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&id_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Product::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Product*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Product.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 amount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Product)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Product.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Product)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Product)
  return target;
}

size_t Product::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Product)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_amount()) {
    // required int32 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  return total_size;
}
size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Product)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 amount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::DynamicCastToGenerated<Product>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Order::InitAsDefaultInstance() {
}
class Order::HasBitSetters {
 public:
  static void set_has_whid(Order* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_x(Order* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_y(Order* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_packageid(Order* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_upsusername(Order* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(Order* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kWhidFieldNumber;
const int Order::kXFieldNumber;
const int Order::kYFieldNumber;
const int Order::kPackageidFieldNumber;
const int Order::kUpsusernameFieldNumber;
const int Order::kItemFieldNumber;
const int Order::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upsusername()) {
    upsusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsusername_);
  }
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Order)
}

void Order::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Order_amazon_5fups_2eproto.base);
  upsusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(y_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:Order)
  SharedDtor();
}

void Order::SharedDtor() {
  upsusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Order& Order::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Order_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    upsusername_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Order::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Order*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 packageid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string upsusername = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Order.upsusername");
        object = msg->mutable_upsusername();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .Product item = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Product::_InternalParse;
          object = msg->add_item();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Order)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string upsusername = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upsusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upsusername().data(), static_cast<int>(this->upsusername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Order.upsusername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Product item = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Order)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // required int64 packageid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->packageid(), output);
  }

  // required string upsusername = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsusername().data(), static_cast<int>(this->upsusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Order.upsusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->upsusername(), output);
  }

  // repeated .Product item = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->item(static_cast<int>(i)),
      output);
  }

  // required int64 seqnum = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // required int64 packageid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->packageid(), target);
  }

  // required string upsusername = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsusername().data(), static_cast<int>(this->upsusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Order.upsusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->upsusername(), target);
  }

  // repeated .Product item = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->item(static_cast<int>(i)), target);
  }

  // required int64 seqnum = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Order)
  return target;
}

size_t Order::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Order)
  size_t total_size = 0;

  if (has_upsusername()) {
    // required string upsusername = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upsusername());
  }

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_packageid()) {
    // required int64 packageid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Order)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string upsusername = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upsusername());

    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 packageid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Product item = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::DynamicCastToGenerated<Order>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      upsusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000010u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000020u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  upsusername_.Swap(&other->upsusername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(whid_, other->whid_);
  swap(x_, other->x_);
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Deliver::InitAsDefaultInstance() {
}
class Deliver::HasBitSetters {
 public:
  static void set_has_packageid(Deliver* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(Deliver* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deliver::kPackageidFieldNumber;
const int Deliver::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deliver::Deliver()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Deliver)
}
Deliver::Deliver(const Deliver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Deliver)
}

void Deliver::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
}

Deliver::~Deliver() {
  // @@protoc_insertion_point(destructor:Deliver)
  SharedDtor();
}

void Deliver::SharedDtor() {
}

void Deliver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Deliver& Deliver::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Deliver_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void Deliver::Clear() {
// @@protoc_insertion_point(message_clear_start:Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Deliver::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Deliver*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Deliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Deliver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Deliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Deliver)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Deliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Deliver)
}

::google::protobuf::uint8* Deliver::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Deliver)
  return target;
}

size_t Deliver::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Deliver)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Deliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Deliver)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Deliver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  const Deliver* source =
      ::google::protobuf::DynamicCastToGenerated<Deliver>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Deliver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Deliver)
    MergeFrom(*source);
  }
}

void Deliver::MergeFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Deliver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deliver::CopyFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deliver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Deliver::Swap(Deliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deliver::InternalSwap(Deliver* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata Deliver::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AWarehouse::InitAsDefaultInstance() {
}
class AWarehouse::HasBitSetters {
 public:
  static void set_has_id(AWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_x(AWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_y(AWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_seqnum(AWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AWarehouse::kIdFieldNumber;
const int AWarehouse::kXFieldNumber;
const int AWarehouse::kYFieldNumber;
const int AWarehouse::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AWarehouse::AWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AWarehouse)
}
AWarehouse::AWarehouse(const AWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&id_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AWarehouse)
}

void AWarehouse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(y_));
}

AWarehouse::~AWarehouse() {
  // @@protoc_insertion_point(destructor:AWarehouse)
  SharedDtor();
}

void AWarehouse::SharedDtor() {
}

void AWarehouse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AWarehouse& AWarehouse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AWarehouse_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void AWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AWarehouse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AWarehouse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AWarehouse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AWarehouse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AWarehouse)
}

::google::protobuf::uint8* AWarehouse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AWarehouse)
  return target;
}

size_t AWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AWarehouse)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t AWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const AWarehouse* source =
      ::google::protobuf::DynamicCastToGenerated<AWarehouse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AWarehouse)
    MergeFrom(*source);
  }
}

void AWarehouse::MergeFrom(const AWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AWarehouse::CopyFrom(const AWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void AWarehouse::Swap(AWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AWarehouse::InternalSwap(AWarehouse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(seqnum_, other->seqnum_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata AWarehouse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AUCommands::InitAsDefaultInstance() {
}
class AUCommands::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCommands::kOrderFieldNumber;
const int AUCommands::kTodeliverFieldNumber;
const int AUCommands::kWhinfoFieldNumber;
const int AUCommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCommands::AUCommands()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUCommands)
}
AUCommands::AUCommands(const AUCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      order_(from.order_),
      todeliver_(from.todeliver_),
      whinfo_(from.whinfo_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AUCommands)
}

void AUCommands::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AUCommands_amazon_5fups_2eproto.base);
}

AUCommands::~AUCommands() {
  // @@protoc_insertion_point(destructor:AUCommands)
  SharedDtor();
}

void AUCommands::SharedDtor() {
}

void AUCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AUCommands& AUCommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AUCommands_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void AUCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_.Clear();
  todeliver_.Clear();
  whinfo_.Clear();
  acks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AUCommands::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AUCommands*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Order order = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Order::_InternalParse;
          object = msg->add_order();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .Deliver todeliver = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Deliver::_InternalParse;
          object = msg->add_todeliver();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .AWarehouse whinfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AWarehouse::_InternalParse;
          object = msg->add_whinfo();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated int64 acks = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 32) {
          do {
            msg->add_acks(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_acks();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AUCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUCommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Order order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Deliver todeliver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_todeliver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AWarehouse whinfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_whinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32u, input, this->mutable_acks())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUCommands)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AUCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Order order = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->order_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->order(static_cast<int>(i)),
      output);
  }

  // repeated .Deliver todeliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->todeliver_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->todeliver(static_cast<int>(i)),
      output);
  }

  // repeated .AWarehouse whinfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->whinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->whinfo(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 4;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUCommands)
}

::google::protobuf::uint8* AUCommands::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Order order = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->order_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->order(static_cast<int>(i)), target);
  }

  // repeated .Deliver todeliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->todeliver_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->todeliver(static_cast<int>(i)), target);
  }

  // repeated .AWarehouse whinfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->whinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->whinfo(static_cast<int>(i)), target);
  }

  // repeated int64 acks = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(4, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUCommands)
  return target;
}

size_t AUCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Order order = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->order_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->order(static_cast<int>(i)));
    }
  }

  // repeated .Deliver todeliver = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->todeliver_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->todeliver(static_cast<int>(i)));
    }
  }

  // repeated .AWarehouse whinfo = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->whinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->whinfo(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AUCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const AUCommands* source =
      ::google::protobuf::DynamicCastToGenerated<AUCommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUCommands)
    MergeFrom(*source);
  }
}

void AUCommands::MergeFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  order_.MergeFrom(from.order_);
  todeliver_.MergeFrom(from.todeliver_);
  whinfo_.MergeFrom(from.whinfo_);
  acks_.MergeFrom(from.acks_);
}

void AUCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCommands::CopyFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->order())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->todeliver())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->whinfo())) return false;
  return true;
}

void AUCommands::Swap(AUCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUCommands::InternalSwap(AUCommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&order_)->InternalSwap(CastToBase(&other->order_));
  CastToBase(&todeliver_)->InternalSwap(CastToBase(&other->todeliver_));
  CastToBase(&whinfo_)->InternalSwap(CastToBase(&other->whinfo_));
  acks_.InternalSwap(&other->acks_);
}

::google::protobuf::Metadata AUCommands::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Truck::InitAsDefaultInstance() {
}
class Truck::HasBitSetters {
 public:
  static void set_has_whid(Truck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_truckid(Truck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_packageid(Truck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_seqnum(Truck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Truck::kWhidFieldNumber;
const int Truck::kTruckidFieldNumber;
const int Truck::kPackageidFieldNumber;
const int Truck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Truck::Truck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Truck)
}
Truck::Truck(const Truck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Truck)
}

void Truck::SharedCtor() {
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(seqnum_));
}

Truck::~Truck() {
  // @@protoc_insertion_point(destructor:Truck)
  SharedDtor();
}

void Truck::SharedDtor() {
}

void Truck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Truck& Truck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Truck_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void Truck::Clear() {
// @@protoc_insertion_point(message_clear_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Truck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Truck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 truckid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_truckid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 packageid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Truck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Truck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_truckid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Truck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Truck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Truck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 packageid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->packageid(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Truck)
}

::google::protobuf::uint8* Truck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 packageid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->packageid(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Truck)
  return target;
}

size_t Truck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Truck)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_packageid()) {
    // required int64 packageid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Truck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Truck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 packageid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Truck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  const Truck* source =
      ::google::protobuf::DynamicCastToGenerated<Truck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Truck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Truck)
    MergeFrom(*source);
  }
}

void Truck::MergeFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Truck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Truck::CopyFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Truck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Truck::Swap(Truck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Truck::InternalSwap(Truck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(whid_, other->whid_);
  swap(truckid_, other->truckid_);
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata Truck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Delivered::InitAsDefaultInstance() {
}
class Delivered::HasBitSetters {
 public:
  static void set_has_packageid(Delivered* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(Delivered* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Delivered::kPackageidFieldNumber;
const int Delivered::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Delivered::Delivered()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Delivered)
}
Delivered::Delivered(const Delivered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Delivered)
}

void Delivered::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
}

Delivered::~Delivered() {
  // @@protoc_insertion_point(destructor:Delivered)
  SharedDtor();
}

void Delivered::SharedDtor() {
}

void Delivered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Delivered& Delivered::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Delivered_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void Delivered::Clear() {
// @@protoc_insertion_point(message_clear_start:Delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Delivered::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Delivered*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Delivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Delivered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Delivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Delivered)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Delivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Delivered)
}

::google::protobuf::uint8* Delivered::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Delivered)
  return target;
}

size_t Delivered::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Delivered)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Delivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Delivered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Delivered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Delivered)
  GOOGLE_DCHECK_NE(&from, this);
  const Delivered* source =
      ::google::protobuf::DynamicCastToGenerated<Delivered>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Delivered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Delivered)
    MergeFrom(*source);
  }
}

void Delivered::MergeFrom(const Delivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Delivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Delivered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Delivered::CopyFrom(const Delivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Delivered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Delivered::Swap(Delivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Delivered::InternalSwap(Delivered* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata Delivered::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UACommands::InitAsDefaultInstance() {
}
class UACommands::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UACommands::kArrivedFieldNumber;
const int UACommands::kFinishFieldNumber;
const int UACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UACommands::UACommands()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UACommands)
}
UACommands::UACommands(const UACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      arrived_(from.arrived_),
      finish_(from.finish_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UACommands)
}

void UACommands::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UACommands_amazon_5fups_2eproto.base);
}

UACommands::~UACommands() {
  // @@protoc_insertion_point(destructor:UACommands)
  SharedDtor();
}

void UACommands::SharedDtor() {
}

void UACommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UACommands& UACommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UACommands_amazon_5fups_2eproto.base);
  return *internal_default_instance();
}


void UACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrived_.Clear();
  finish_.Clear();
  acks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UACommands::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UACommands*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Truck arrived = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Truck::_InternalParse;
          object = msg->add_arrived();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .Delivered finish = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Delivered::_InternalParse;
          object = msg->add_finish();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated int64 acks = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_acks(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_acks();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UACommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Truck arrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Delivered finish = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_finish()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_acks())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UACommands)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Truck arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arrived(static_cast<int>(i)),
      output);
  }

  // repeated .Delivered finish = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->finish_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->finish(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 3;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UACommands)
}

::google::protobuf::uint8* UACommands::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Truck arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arrived(static_cast<int>(i)), target);
  }

  // repeated .Delivered finish = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->finish_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->finish(static_cast<int>(i)), target);
  }

  // repeated int64 acks = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UACommands)
  return target;
}

size_t UACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Truck arrived = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arrived_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrived(static_cast<int>(i)));
    }
  }

  // repeated .Delivered finish = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->finish_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->finish(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UACommands* source =
      ::google::protobuf::DynamicCastToGenerated<UACommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UACommands)
    MergeFrom(*source);
  }
}

void UACommands::MergeFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrived_.MergeFrom(from.arrived_);
  finish_.MergeFrom(from.finish_);
  acks_.MergeFrom(from.acks_);
}

void UACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UACommands::CopyFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->finish())) return false;
  return true;
}

void UACommands::Swap(UACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UACommands::InternalSwap(UACommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&arrived_)->InternalSwap(CastToBase(&other->arrived_));
  CastToBase(&finish_)->InternalSwap(CastToBase(&other->finish_));
  acks_.InternalSwap(&other->acks_);
}

::google::protobuf::Metadata UACommands::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_amazon_5fups_2eproto);
  return ::file_level_metadata_amazon_5fups_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Product* Arena::CreateMaybeMessage< ::Product >(Arena* arena) {
  return Arena::CreateInternal< ::Product >(arena);
}
template<> PROTOBUF_NOINLINE ::Order* Arena::CreateMaybeMessage< ::Order >(Arena* arena) {
  return Arena::CreateInternal< ::Order >(arena);
}
template<> PROTOBUF_NOINLINE ::Deliver* Arena::CreateMaybeMessage< ::Deliver >(Arena* arena) {
  return Arena::CreateInternal< ::Deliver >(arena);
}
template<> PROTOBUF_NOINLINE ::AWarehouse* Arena::CreateMaybeMessage< ::AWarehouse >(Arena* arena) {
  return Arena::CreateInternal< ::AWarehouse >(arena);
}
template<> PROTOBUF_NOINLINE ::AUCommands* Arena::CreateMaybeMessage< ::AUCommands >(Arena* arena) {
  return Arena::CreateInternal< ::AUCommands >(arena);
}
template<> PROTOBUF_NOINLINE ::Truck* Arena::CreateMaybeMessage< ::Truck >(Arena* arena) {
  return Arena::CreateInternal< ::Truck >(arena);
}
template<> PROTOBUF_NOINLINE ::Delivered* Arena::CreateMaybeMessage< ::Delivered >(Arena* arena) {
  return Arena::CreateInternal< ::Delivered >(arena);
}
template<> PROTOBUF_NOINLINE ::UACommands* Arena::CreateMaybeMessage< ::UACommands >(Arena* arena) {
  return Arena::CreateInternal< ::UACommands >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
