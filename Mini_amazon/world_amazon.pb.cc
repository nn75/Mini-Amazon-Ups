// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_amazon.proto

#include "world_amazon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AErr_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AInitWarehouse_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ALoaded_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_APackage_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_APacked_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AProduct_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_APutOnTruck_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AQuery_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_APack_world_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_APurchaseMore_world_5famazon_2eproto;
class AProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AProduct> _instance;
} _AProduct_default_instance_;
class AInitWarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AInitWarehouse> _instance;
} _AInitWarehouse_default_instance_;
class AConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AConnect> _instance;
} _AConnect_default_instance_;
class AConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AConnected> _instance;
} _AConnected_default_instance_;
class APackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APack> _instance;
} _APack_default_instance_;
class APackedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APacked> _instance;
} _APacked_default_instance_;
class ALoadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ALoaded> _instance;
} _ALoaded_default_instance_;
class APutOnTruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APutOnTruck> _instance;
} _APutOnTruck_default_instance_;
class APurchaseMoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APurchaseMore> _instance;
} _APurchaseMore_default_instance_;
class AErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AErr> _instance;
} _AErr_default_instance_;
class AQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AQuery> _instance;
} _AQuery_default_instance_;
class APackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APackage> _instance;
} _APackage_default_instance_;
class ACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ACommands> _instance;
} _ACommands_default_instance_;
class AResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AResponses> _instance;
} _AResponses_default_instance_;
static void InitDefaultsAProduct_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AProduct_default_instance_;
    new (ptr) ::AProduct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AProduct::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AProduct_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAProduct_world_5famazon_2eproto}, {}};

static void InitDefaultsAInitWarehouse_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AInitWarehouse_default_instance_;
    new (ptr) ::AInitWarehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AInitWarehouse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AInitWarehouse_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAInitWarehouse_world_5famazon_2eproto}, {}};

static void InitDefaultsAConnect_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AConnect_default_instance_;
    new (ptr) ::AConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AConnect_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAConnect_world_5famazon_2eproto}, {
      &scc_info_AInitWarehouse_world_5famazon_2eproto.base,}};

static void InitDefaultsAConnected_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AConnected_default_instance_;
    new (ptr) ::AConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AConnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AConnected_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAConnected_world_5famazon_2eproto}, {}};

static void InitDefaultsAPack_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_APack_default_instance_;
    new (ptr) ::APack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_APack_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAPack_world_5famazon_2eproto}, {
      &scc_info_AProduct_world_5famazon_2eproto.base,}};

static void InitDefaultsAPacked_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_APacked_default_instance_;
    new (ptr) ::APacked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APacked::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_APacked_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAPacked_world_5famazon_2eproto}, {}};

static void InitDefaultsALoaded_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ALoaded_default_instance_;
    new (ptr) ::ALoaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ALoaded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ALoaded_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsALoaded_world_5famazon_2eproto}, {}};

static void InitDefaultsAPutOnTruck_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_APutOnTruck_default_instance_;
    new (ptr) ::APutOnTruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APutOnTruck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_APutOnTruck_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAPutOnTruck_world_5famazon_2eproto}, {}};

static void InitDefaultsAPurchaseMore_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_APurchaseMore_default_instance_;
    new (ptr) ::APurchaseMore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APurchaseMore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_APurchaseMore_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAPurchaseMore_world_5famazon_2eproto}, {
      &scc_info_AProduct_world_5famazon_2eproto.base,}};

static void InitDefaultsAErr_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AErr_default_instance_;
    new (ptr) ::AErr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AErr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AErr_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAErr_world_5famazon_2eproto}, {}};

static void InitDefaultsAQuery_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AQuery_default_instance_;
    new (ptr) ::AQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AQuery_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAQuery_world_5famazon_2eproto}, {}};

static void InitDefaultsAPackage_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_APackage_default_instance_;
    new (ptr) ::APackage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APackage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_APackage_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAPackage_world_5famazon_2eproto}, {}};

static void InitDefaultsACommands_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ACommands_default_instance_;
    new (ptr) ::ACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ACommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ACommands_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsACommands_world_5famazon_2eproto}, {
      &scc_info_APurchaseMore_world_5famazon_2eproto.base,
      &scc_info_APack_world_5famazon_2eproto.base,
      &scc_info_APutOnTruck_world_5famazon_2eproto.base,
      &scc_info_AQuery_world_5famazon_2eproto.base,}};

static void InitDefaultsAResponses_world_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AResponses_default_instance_;
    new (ptr) ::AResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_AResponses_world_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsAResponses_world_5famazon_2eproto}, {
      &scc_info_APurchaseMore_world_5famazon_2eproto.base,
      &scc_info_APacked_world_5famazon_2eproto.base,
      &scc_info_ALoaded_world_5famazon_2eproto.base,
      &scc_info_AErr_world_5famazon_2eproto.base,
      &scc_info_APackage_world_5famazon_2eproto.base,}};

void InitDefaults_world_5famazon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AProduct_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AInitWarehouse_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AConnect_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AConnected_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_APack_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_APacked_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ALoaded_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_APutOnTruck_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_APurchaseMore_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AErr_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AQuery_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_APackage_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ACommands_world_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AResponses_world_5famazon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_world_5famazon_2eproto[14];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_world_5famazon_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_world_5famazon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_world_5famazon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::AProduct, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AProduct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AProduct, id_),
  PROTOBUF_FIELD_OFFSET(::AProduct, description_),
  PROTOBUF_FIELD_OFFSET(::AProduct, count_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::AInitWarehouse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AInitWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AInitWarehouse, id_),
  PROTOBUF_FIELD_OFFSET(::AInitWarehouse, x_),
  PROTOBUF_FIELD_OFFSET(::AInitWarehouse, y_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::AConnect, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AConnect, worldid_),
  PROTOBUF_FIELD_OFFSET(::AConnect, initwh_),
  PROTOBUF_FIELD_OFFSET(::AConnect, isamazon_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::AConnected, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AConnected, worldid_),
  PROTOBUF_FIELD_OFFSET(::AConnected, result_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::APack, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::APack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::APack, whnum_),
  PROTOBUF_FIELD_OFFSET(::APack, things_),
  PROTOBUF_FIELD_OFFSET(::APack, shipid_),
  PROTOBUF_FIELD_OFFSET(::APack, seqnum_),
  2,
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::APacked, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::APacked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::APacked, shipid_),
  PROTOBUF_FIELD_OFFSET(::APacked, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ALoaded, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ALoaded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ALoaded, shipid_),
  PROTOBUF_FIELD_OFFSET(::ALoaded, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, whnum_),
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, truckid_),
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, shipid_),
  PROTOBUF_FIELD_OFFSET(::APutOnTruck, seqnum_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::APurchaseMore, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::APurchaseMore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::APurchaseMore, whnum_),
  PROTOBUF_FIELD_OFFSET(::APurchaseMore, things_),
  PROTOBUF_FIELD_OFFSET(::APurchaseMore, seqnum_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::AErr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AErr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AErr, err_),
  PROTOBUF_FIELD_OFFSET(::AErr, originseqnum_),
  PROTOBUF_FIELD_OFFSET(::AErr, seqnum_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::AQuery, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AQuery, packageid_),
  PROTOBUF_FIELD_OFFSET(::AQuery, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::APackage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::APackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::APackage, packageid_),
  PROTOBUF_FIELD_OFFSET(::APackage, status_),
  PROTOBUF_FIELD_OFFSET(::APackage, seqnum_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::ACommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ACommands, buy_),
  PROTOBUF_FIELD_OFFSET(::ACommands, topack_),
  PROTOBUF_FIELD_OFFSET(::ACommands, load_),
  PROTOBUF_FIELD_OFFSET(::ACommands, queries_),
  PROTOBUF_FIELD_OFFSET(::ACommands, simspeed_),
  PROTOBUF_FIELD_OFFSET(::ACommands, disconnect_),
  PROTOBUF_FIELD_OFFSET(::ACommands, acks_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::AResponses, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AResponses, arrived_),
  PROTOBUF_FIELD_OFFSET(::AResponses, ready_),
  PROTOBUF_FIELD_OFFSET(::AResponses, loaded_),
  PROTOBUF_FIELD_OFFSET(::AResponses, finished_),
  PROTOBUF_FIELD_OFFSET(::AResponses, error_),
  PROTOBUF_FIELD_OFFSET(::AResponses, acks_),
  PROTOBUF_FIELD_OFFSET(::AResponses, packagestatus_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::AProduct)},
  { 11, 19, sizeof(::AInitWarehouse)},
  { 22, 30, sizeof(::AConnect)},
  { 33, 40, sizeof(::AConnected)},
  { 42, 51, sizeof(::APack)},
  { 55, 62, sizeof(::APacked)},
  { 64, 71, sizeof(::ALoaded)},
  { 73, 82, sizeof(::APutOnTruck)},
  { 86, 94, sizeof(::APurchaseMore)},
  { 97, 105, sizeof(::AErr)},
  { 108, 115, sizeof(::AQuery)},
  { 117, 125, sizeof(::APackage)},
  { 128, 140, sizeof(::ACommands)},
  { 147, 159, sizeof(::AResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AProduct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AInitWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APacked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ALoaded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APutOnTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APurchaseMore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AErr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APackage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ACommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AResponses_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_world_5famazon_2eproto = {
  {}, AddDescriptors_world_5famazon_2eproto, "world_amazon.proto", schemas,
  file_default_instances, TableStruct_world_5famazon_2eproto::offsets,
  file_level_metadata_world_5famazon_2eproto, 14, file_level_enum_descriptors_world_5famazon_2eproto, file_level_service_descriptors_world_5famazon_2eproto,
};

const char descriptor_table_protodef_world_5famazon_2eproto[] =
  "\n\022world_amazon.proto\":\n\010AProduct\022\n\n\002id\030\001"
  " \002(\003\022\023\n\013description\030\002 \002(\t\022\r\n\005count\030\003 \002(\005"
  "\"2\n\016AInitWarehouse\022\n\n\002id\030\001 \002(\005\022\t\n\001x\030\002 \002("
  "\005\022\t\n\001y\030\003 \002(\005\"N\n\010AConnect\022\017\n\007worldid\030\001 \001("
  "\003\022\037\n\006initwh\030\002 \003(\0132\017.AInitWarehouse\022\020\n\010is"
  "Amazon\030\003 \002(\010\"-\n\nAConnected\022\017\n\007worldid\030\001 "
  "\002(\003\022\016\n\006result\030\002 \002(\t\"Q\n\005APack\022\r\n\005whnum\030\001 "
  "\002(\005\022\031\n\006things\030\002 \003(\0132\t.AProduct\022\016\n\006shipid"
  "\030\003 \002(\003\022\016\n\006seqnum\030\004 \002(\003\")\n\007APacked\022\016\n\006shi"
  "pid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\")\n\007ALoaded\022\016\n\006"
  "shipid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\"M\n\013APutOnTr"
  "uck\022\r\n\005whnum\030\001 \002(\005\022\017\n\007truckid\030\002 \002(\005\022\016\n\006s"
  "hipid\030\003 \002(\003\022\016\n\006seqnum\030\004 \002(\003\"I\n\rAPurchase"
  "More\022\r\n\005whnum\030\001 \002(\005\022\031\n\006things\030\002 \003(\0132\t.AP"
  "roduct\022\016\n\006seqnum\030\003 \002(\003\"9\n\004AErr\022\013\n\003err\030\001 "
  "\002(\t\022\024\n\014originseqnum\030\002 \002(\003\022\016\n\006seqnum\030\003 \002("
  "\003\"+\n\006AQuery\022\021\n\tpackageid\030\001 \002(\003\022\016\n\006seqnum"
  "\030\002 \002(\003\"=\n\010APackage\022\021\n\tpackageid\030\001 \002(\003\022\016\n"
  "\006status\030\002 \002(\t\022\016\n\006seqnum\030\003 \002(\003\"\252\001\n\tAComma"
  "nds\022\033\n\003buy\030\001 \003(\0132\016.APurchaseMore\022\026\n\006topa"
  "ck\030\002 \003(\0132\006.APack\022\032\n\004load\030\003 \003(\0132\014.APutOnT"
  "ruck\022\030\n\007queries\030\004 \003(\0132\007.AQuery\022\020\n\010simspe"
  "ed\030\005 \001(\r\022\022\n\ndisconnect\030\006 \001(\010\022\014\n\004acks\030\007 \003"
  "(\003\"\270\001\n\nAResponses\022\037\n\007arrived\030\001 \003(\0132\016.APu"
  "rchaseMore\022\027\n\005ready\030\002 \003(\0132\010.APacked\022\030\n\006l"
  "oaded\030\003 \003(\0132\010.ALoaded\022\020\n\010finished\030\004 \001(\010\022"
  "\024\n\005error\030\005 \003(\0132\005.AErr\022\014\n\004acks\030\006 \003(\003\022 \n\rp"
  "ackagestatus\030\007 \003(\0132\t.APackage"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_world_5famazon_2eproto = {
  false, InitDefaults_world_5famazon_2eproto, 
  descriptor_table_protodef_world_5famazon_2eproto,
  "world_amazon.proto", &assign_descriptors_table_world_5famazon_2eproto, 1109,
};

void AddDescriptors_world_5famazon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_world_5famazon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_world_5famazon_2eproto = []() { AddDescriptors_world_5famazon_2eproto(); return true; }();

// ===================================================================

void AProduct::InitAsDefaultInstance() {
}
class AProduct::HasBitSetters {
 public:
  static void set_has_id(AProduct* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_description(AProduct* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_count(AProduct* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AProduct::kIdFieldNumber;
const int AProduct::kDescriptionFieldNumber;
const int AProduct::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AProduct::AProduct()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AProduct)
}
AProduct::AProduct(const AProduct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:AProduct)
}

void AProduct::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AProduct_world_5famazon_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(count_));
}

AProduct::~AProduct() {
  // @@protoc_insertion_point(destructor:AProduct)
  SharedDtor();
}

void AProduct::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AProduct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AProduct& AProduct::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AProduct_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&id_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AProduct::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AProduct*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AProduct.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AProduct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AProduct.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AProduct)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AProduct)
}

::google::protobuf::uint8* AProduct::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AProduct)
  return target;
}

size_t AProduct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AProduct)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t AProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AProduct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  const AProduct* source =
      ::google::protobuf::DynamicCastToGenerated<AProduct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AProduct)
    MergeFrom(*source);
  }
}

void AProduct::MergeFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AProduct::CopyFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AProduct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AProduct::Swap(AProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AProduct::InternalSwap(AProduct* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(count_, other->count_);
}

::google::protobuf::Metadata AProduct::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AInitWarehouse::InitAsDefaultInstance() {
}
class AInitWarehouse::HasBitSetters {
 public:
  static void set_has_id(AInitWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_x(AInitWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_y(AInitWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AInitWarehouse::kIdFieldNumber;
const int AInitWarehouse::kXFieldNumber;
const int AInitWarehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AInitWarehouse::AInitWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AInitWarehouse)
}
AInitWarehouse::AInitWarehouse(const AInitWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&id_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AInitWarehouse)
}

void AInitWarehouse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(y_));
}

AInitWarehouse::~AInitWarehouse() {
  // @@protoc_insertion_point(destructor:AInitWarehouse)
  SharedDtor();
}

void AInitWarehouse::SharedDtor() {
}

void AInitWarehouse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AInitWarehouse& AInitWarehouse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AInitWarehouse_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AInitWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AInitWarehouse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AInitWarehouse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AInitWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AInitWarehouse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AInitWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AInitWarehouse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AInitWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AInitWarehouse)
}

::google::protobuf::uint8* AInitWarehouse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AInitWarehouse)
  return target;
}

size_t AInitWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AInitWarehouse)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t AInitWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AInitWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AInitWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const AInitWarehouse* source =
      ::google::protobuf::DynamicCastToGenerated<AInitWarehouse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AInitWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AInitWarehouse)
    MergeFrom(*source);
  }
}

void AInitWarehouse::MergeFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AInitWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AInitWarehouse::CopyFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AInitWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AInitWarehouse::Swap(AInitWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AInitWarehouse::InternalSwap(AInitWarehouse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata AInitWarehouse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AConnect::InitAsDefaultInstance() {
}
class AConnect::HasBitSetters {
 public:
  static void set_has_worldid(AConnect* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_isamazon(AConnect* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnect::kWorldidFieldNumber;
const int AConnect::kInitwhFieldNumber;
const int AConnect::kIsAmazonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnect::AConnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnect)
}
AConnect::AConnect(const AConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      initwh_(from.initwh_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&worldid_, &from.worldid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isamazon_) -
    reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
  // @@protoc_insertion_point(copy_constructor:AConnect)
}

void AConnect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AConnect_world_5famazon_2eproto.base);
  ::memset(&worldid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isamazon_) -
      reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
}

AConnect::~AConnect() {
  // @@protoc_insertion_point(destructor:AConnect)
  SharedDtor();
}

void AConnect::SharedDtor() {
}

void AConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AConnect& AConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AConnect_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initwh_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&worldid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isamazon_) -
        reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AConnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AConnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int64 worldid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_worldid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .AInitWarehouse initwh = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AInitWarehouse::_InternalParse;
          object = msg->add_initwh();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // required bool isAmazon = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_isamazon(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_worldid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AInitWarehouse initwh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_initwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isAmazon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_isamazon(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isamazon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->initwh(static_cast<int>(i)),
      output);
  }

  // required bool isAmazon = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isamazon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnect)
}

::google::protobuf::uint8* AConnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->initwh(static_cast<int>(i)), target);
  }

  // required bool isAmazon = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isamazon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnect)
  return target;
}

size_t AConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool isAmazon = 3;
  if (has_isamazon()) {
    total_size += 1 + 1;
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AInitWarehouse initwh = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->initwh_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initwh(static_cast<int>(i)));
    }
  }

  // optional int64 worldid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnect* source =
      ::google::protobuf::DynamicCastToGenerated<AConnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnect)
    MergeFrom(*source);
  }
}

void AConnect::MergeFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initwh_.MergeFrom(from.initwh_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      worldid_ = from.worldid_;
    }
    if (cached_has_bits & 0x00000002u) {
      isamazon_ = from.isamazon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnect::CopyFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->initwh())) return false;
  return true;
}

void AConnect::Swap(AConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnect::InternalSwap(AConnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&initwh_)->InternalSwap(CastToBase(&other->initwh_));
  swap(worldid_, other->worldid_);
  swap(isamazon_, other->isamazon_);
}

::google::protobuf::Metadata AConnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AConnected::InitAsDefaultInstance() {
}
class AConnected::HasBitSetters {
 public:
  static void set_has_worldid(AConnected* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_result(AConnected* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnected::kWorldidFieldNumber;
const int AConnected::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnected::AConnected()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnected)
}
AConnected::AConnected(const AConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:AConnected)
}

void AConnected::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AConnected_world_5famazon_2eproto.base);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worldid_ = PROTOBUF_LONGLONG(0);
}

AConnected::~AConnected() {
  // @@protoc_insertion_point(destructor:AConnected)
  SharedDtor();
}

void AConnected::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AConnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AConnected& AConnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AConnected_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AConnected::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AConnected*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_worldid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string result = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AConnected.result");
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_worldid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AConnected.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnected)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnected)
}

::google::protobuf::uint8* AConnected::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnected)
  return target;
}

size_t AConnected::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AConnected)
  size_t total_size = 0;

  if (has_result()) {
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  return total_size;
}
size_t AConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnected* source =
      ::google::protobuf::DynamicCastToGenerated<AConnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnected)
    MergeFrom(*source);
  }
}

void AConnected::MergeFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      worldid_ = from.worldid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnected::CopyFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AConnected::Swap(AConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnected::InternalSwap(AConnected* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worldid_, other->worldid_);
}

::google::protobuf::Metadata AConnected::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void APack::InitAsDefaultInstance() {
}
class APack::HasBitSetters {
 public:
  static void set_has_whnum(APack* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_shipid(APack* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(APack* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APack::kWhnumFieldNumber;
const int APack::kThingsFieldNumber;
const int APack::kShipidFieldNumber;
const int APack::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APack::APack()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APack)
}
APack::APack(const APack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
  // @@protoc_insertion_point(copy_constructor:APack)
}

void APack::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_APack_world_5famazon_2eproto.base);
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whnum_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
}

APack::~APack() {
  // @@protoc_insertion_point(destructor:APack)
  SharedDtor();
}

void APack::SharedDtor() {
}

void APack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const APack& APack::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_APack_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void APack::Clear() {
// @@protoc_insertion_point(message_clear_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whnum_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* APack::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<APack*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AProduct::_InternalParse;
          object = msg->add_things();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // required int64 shipid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool APack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APack)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void APack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->things(static_cast<int>(i)),
      output);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APack)
}

::google::protobuf::uint8* APack::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->things(static_cast<int>(i)), target);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APack)
  return target;
}

size_t APack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APack)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  return total_size;
}
size_t APack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AProduct things = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void APack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  const APack* source =
      ::google::protobuf::DynamicCastToGenerated<APack>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APack)
    MergeFrom(*source);
  }
}

void APack::MergeFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      whnum_ = from.whnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APack::CopyFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APack::Swap(APack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APack::InternalSwap(APack* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&things_)->InternalSwap(CastToBase(&other->things_));
  swap(shipid_, other->shipid_);
  swap(seqnum_, other->seqnum_);
  swap(whnum_, other->whnum_);
}

::google::protobuf::Metadata APack::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void APacked::InitAsDefaultInstance() {
}
class APacked::HasBitSetters {
 public:
  static void set_has_shipid(APacked* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(APacked* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APacked::kShipidFieldNumber;
const int APacked::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APacked::APacked()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APacked)
}
APacked::APacked(const APacked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:APacked)
}

void APacked::SharedCtor() {
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
}

APacked::~APacked() {
  // @@protoc_insertion_point(destructor:APacked)
  SharedDtor();
}

void APacked::SharedDtor() {
}

void APacked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const APacked& APacked::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_APacked_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void APacked::Clear() {
// @@protoc_insertion_point(message_clear_start:APacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* APacked::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<APacked*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool APacked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APacked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APacked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APacked)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void APacked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APacked)
}

::google::protobuf::uint8* APacked::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APacked)
  return target;
}

size_t APacked::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APacked)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t APacked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APacked)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void APacked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APacked)
  GOOGLE_DCHECK_NE(&from, this);
  const APacked* source =
      ::google::protobuf::DynamicCastToGenerated<APacked>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APacked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APacked)
    MergeFrom(*source);
  }
}

void APacked::MergeFrom(const APacked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APacked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APacked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APacked::CopyFrom(const APacked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APacked::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void APacked::Swap(APacked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APacked::InternalSwap(APacked* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(shipid_, other->shipid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata APacked::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ALoaded::InitAsDefaultInstance() {
}
class ALoaded::HasBitSetters {
 public:
  static void set_has_shipid(ALoaded* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(ALoaded* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ALoaded::kShipidFieldNumber;
const int ALoaded::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ALoaded::ALoaded()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ALoaded)
}
ALoaded::ALoaded(const ALoaded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:ALoaded)
}

void ALoaded::SharedCtor() {
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
}

ALoaded::~ALoaded() {
  // @@protoc_insertion_point(destructor:ALoaded)
  SharedDtor();
}

void ALoaded::SharedDtor() {
}

void ALoaded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ALoaded& ALoaded::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ALoaded_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void ALoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:ALoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ALoaded::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ALoaded*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ALoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ALoaded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ALoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ALoaded)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ALoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ALoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ALoaded)
}

::google::protobuf::uint8* ALoaded::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ALoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ALoaded)
  return target;
}

size_t ALoaded::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ALoaded)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t ALoaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ALoaded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ALoaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ALoaded)
  GOOGLE_DCHECK_NE(&from, this);
  const ALoaded* source =
      ::google::protobuf::DynamicCastToGenerated<ALoaded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ALoaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ALoaded)
    MergeFrom(*source);
  }
}

void ALoaded::MergeFrom(const ALoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ALoaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ALoaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ALoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ALoaded::CopyFrom(const ALoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ALoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ALoaded::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ALoaded::Swap(ALoaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ALoaded::InternalSwap(ALoaded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(shipid_, other->shipid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata ALoaded::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void APutOnTruck::InitAsDefaultInstance() {
}
class APutOnTruck::HasBitSetters {
 public:
  static void set_has_whnum(APutOnTruck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_truckid(APutOnTruck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_shipid(APutOnTruck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_seqnum(APutOnTruck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APutOnTruck::kWhnumFieldNumber;
const int APutOnTruck::kTruckidFieldNumber;
const int APutOnTruck::kShipidFieldNumber;
const int APutOnTruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APutOnTruck::APutOnTruck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APutOnTruck)
}
APutOnTruck::APutOnTruck(const APutOnTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whnum_, &from.whnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&whnum_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:APutOnTruck)
}

void APutOnTruck::SharedCtor() {
  ::memset(&whnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&whnum_)) + sizeof(seqnum_));
}

APutOnTruck::~APutOnTruck() {
  // @@protoc_insertion_point(destructor:APutOnTruck)
  SharedDtor();
}

void APutOnTruck::SharedDtor() {
}

void APutOnTruck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const APutOnTruck& APutOnTruck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_APutOnTruck_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void APutOnTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&whnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&whnum_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* APutOnTruck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<APutOnTruck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 truckid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_truckid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 shipid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool APutOnTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APutOnTruck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_truckid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APutOnTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APutOnTruck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void APutOnTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APutOnTruck)
}

::google::protobuf::uint8* APutOnTruck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  // required int64 seqnum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APutOnTruck)
  return target;
}

size_t APutOnTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APutOnTruck)
  size_t total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t APutOnTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APutOnTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void APutOnTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const APutOnTruck* source =
      ::google::protobuf::DynamicCastToGenerated<APutOnTruck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APutOnTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APutOnTruck)
    MergeFrom(*source);
  }
}

void APutOnTruck::MergeFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      whnum_ = from.whnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APutOnTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APutOnTruck::CopyFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APutOnTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void APutOnTruck::Swap(APutOnTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APutOnTruck::InternalSwap(APutOnTruck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(whnum_, other->whnum_);
  swap(truckid_, other->truckid_);
  swap(shipid_, other->shipid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata APutOnTruck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void APurchaseMore::InitAsDefaultInstance() {
}
class APurchaseMore::HasBitSetters {
 public:
  static void set_has_whnum(APurchaseMore* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_seqnum(APurchaseMore* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APurchaseMore::kWhnumFieldNumber;
const int APurchaseMore::kThingsFieldNumber;
const int APurchaseMore::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APurchaseMore::APurchaseMore()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APurchaseMore)
}
APurchaseMore::APurchaseMore(const APurchaseMore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(whnum_));
  // @@protoc_insertion_point(copy_constructor:APurchaseMore)
}

void APurchaseMore::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_APurchaseMore_world_5famazon_2eproto.base);
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whnum_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(whnum_));
}

APurchaseMore::~APurchaseMore() {
  // @@protoc_insertion_point(destructor:APurchaseMore)
  SharedDtor();
}

void APurchaseMore::SharedDtor() {
}

void APurchaseMore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const APurchaseMore& APurchaseMore::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_APurchaseMore_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void APurchaseMore::Clear() {
// @@protoc_insertion_point(message_clear_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whnum_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(whnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* APurchaseMore::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<APurchaseMore*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AProduct::_InternalParse;
          object = msg->add_things();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool APurchaseMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APurchaseMore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APurchaseMore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APurchaseMore)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void APurchaseMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->things(static_cast<int>(i)),
      output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APurchaseMore)
}

::google::protobuf::uint8* APurchaseMore::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->things(static_cast<int>(i)), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APurchaseMore)
  return target;
}

size_t APurchaseMore::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APurchaseMore)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  return total_size;
}
size_t APurchaseMore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APurchaseMore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AProduct things = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void APurchaseMore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  const APurchaseMore* source =
      ::google::protobuf::DynamicCastToGenerated<APurchaseMore>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APurchaseMore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APurchaseMore)
    MergeFrom(*source);
  }
}

void APurchaseMore::MergeFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      whnum_ = from.whnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APurchaseMore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APurchaseMore::CopyFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APurchaseMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APurchaseMore::Swap(APurchaseMore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APurchaseMore::InternalSwap(APurchaseMore* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&things_)->InternalSwap(CastToBase(&other->things_));
  swap(seqnum_, other->seqnum_);
  swap(whnum_, other->whnum_);
}

::google::protobuf::Metadata APurchaseMore::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AErr::InitAsDefaultInstance() {
}
class AErr::HasBitSetters {
 public:
  static void set_has_err(AErr* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_originseqnum(AErr* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_seqnum(AErr* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AErr::kErrFieldNumber;
const int AErr::kOriginseqnumFieldNumber;
const int AErr::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AErr::AErr()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AErr)
}
AErr::AErr(const AErr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err()) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ::memcpy(&originseqnum_, &from.originseqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:AErr)
}

void AErr::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AErr_world_5famazon_2eproto.base);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originseqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
}

AErr::~AErr() {
  // @@protoc_insertion_point(destructor:AErr)
  SharedDtor();
}

void AErr::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AErr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AErr& AErr::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AErr_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AErr::Clear() {
// @@protoc_insertion_point(message_clear_start:AErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    err_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&originseqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AErr::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AErr*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string err = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AErr.err");
        object = msg->mutable_err();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_originseqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AErr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AErr.err");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_originseqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AErr)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AErr.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AErr)
}

::google::protobuf::uint8* AErr::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AErr.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AErr)
  return target;
}

size_t AErr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AErr)
  size_t total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t AErr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AErr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AErr)
  GOOGLE_DCHECK_NE(&from, this);
  const AErr* source =
      ::google::protobuf::DynamicCastToGenerated<AErr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AErr)
    MergeFrom(*source);
  }
}

void AErr::MergeFrom(const AErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AErr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (cached_has_bits & 0x00000002u) {
      originseqnum_ = from.originseqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AErr::CopyFrom(const AErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AErr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AErr::Swap(AErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AErr::InternalSwap(AErr* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  err_.Swap(&other->err_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(originseqnum_, other->originseqnum_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata AErr::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AQuery::InitAsDefaultInstance() {
}
class AQuery::HasBitSetters {
 public:
  static void set_has_packageid(AQuery* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(AQuery* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AQuery::kPackageidFieldNumber;
const int AQuery::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AQuery::AQuery()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AQuery)
}
AQuery::AQuery(const AQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:AQuery)
}

void AQuery::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
}

AQuery::~AQuery() {
  // @@protoc_insertion_point(destructor:AQuery)
  SharedDtor();
}

void AQuery::SharedDtor() {
}

void AQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AQuery& AQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AQuery_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:AQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AQuery::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AQuery*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AQuery)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AQuery)
}

::google::protobuf::uint8* AQuery::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AQuery)
  return target;
}

size_t AQuery::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AQuery)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t AQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const AQuery* source =
      ::google::protobuf::DynamicCastToGenerated<AQuery>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AQuery)
    MergeFrom(*source);
  }
}

void AQuery::MergeFrom(const AQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AQuery::CopyFrom(const AQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AQuery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AQuery::Swap(AQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AQuery::InternalSwap(AQuery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata AQuery::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void APackage::InitAsDefaultInstance() {
}
class APackage::HasBitSetters {
 public:
  static void set_has_packageid(APackage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_status(APackage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(APackage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APackage::kPackageidFieldNumber;
const int APackage::kStatusFieldNumber;
const int APackage::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APackage::APackage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APackage)
}
APackage::APackage(const APackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:APackage)
}

void APackage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_APackage_world_5famazon_2eproto.base);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
}

APackage::~APackage() {
  // @@protoc_insertion_point(destructor:APackage)
  SharedDtor();
}

void APackage::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void APackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const APackage& APackage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_APackage_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void APackage::Clear() {
// @@protoc_insertion_point(message_clear_start:APackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* APackage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<APackage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("APackage.status");
        object = msg->mutable_status();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int64 seqnum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool APackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APackage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "APackage.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APackage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void APackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "APackage.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APackage)
}

::google::protobuf::uint8* APackage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "APackage.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APackage)
  return target;
}

size_t APackage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APackage)
  size_t total_size = 0;

  if (has_status()) {
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t APackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APackage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void APackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APackage)
  GOOGLE_DCHECK_NE(&from, this);
  const APackage* source =
      ::google::protobuf::DynamicCastToGenerated<APackage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APackage)
    MergeFrom(*source);
  }
}

void APackage::MergeFrom(const APackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000002u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APackage::CopyFrom(const APackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APackage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void APackage::Swap(APackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APackage::InternalSwap(APackage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata APackage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ACommands::InitAsDefaultInstance() {
}
class ACommands::HasBitSetters {
 public:
  static void set_has_simspeed(ACommands* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_disconnect(ACommands* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACommands::kBuyFieldNumber;
const int ACommands::kTopackFieldNumber;
const int ACommands::kLoadFieldNumber;
const int ACommands::kQueriesFieldNumber;
const int ACommands::kSimspeedFieldNumber;
const int ACommands::kDisconnectFieldNumber;
const int ACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACommands::ACommands()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ACommands)
}
ACommands::ACommands(const ACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      buy_(from.buy_),
      topack_(from.topack_),
      load_(from.load_),
      queries_(from.queries_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simspeed_, &from.simspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:ACommands)
}

void ACommands::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ACommands_world_5famazon_2eproto.base);
  ::memset(&simspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
}

ACommands::~ACommands() {
  // @@protoc_insertion_point(destructor:ACommands)
  SharedDtor();
}

void ACommands::SharedDtor() {
}

void ACommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ACommands& ACommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ACommands_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void ACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buy_.Clear();
  topack_.Clear();
  load_.Clear();
  queries_.Clear();
  acks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&simspeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disconnect_) -
        reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ACommands::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ACommands*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .APurchaseMore buy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APurchaseMore::_InternalParse;
          object = msg->add_buy();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .APack topack = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APack::_InternalParse;
          object = msg->add_topack();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .APutOnTruck load = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APutOnTruck::_InternalParse;
          object = msg->add_load();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .AQuery queries = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AQuery::_InternalParse;
          object = msg->add_queries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // optional uint32 simspeed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_simspeed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool disconnect = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_disconnect(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 acks = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) == 56) {
          do {
            msg->add_acks(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 56 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_acks();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ACommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore buy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APack topack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_topack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APutOnTruck load = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_load()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AQuery queries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 simspeed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_simspeed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_disconnect(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 56u, input, this->mutable_acks())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ACommands)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buy_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->buy(static_cast<int>(i)),
      output);
  }

  // repeated .APack topack = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->topack(static_cast<int>(i)),
      output);
  }

  // repeated .APutOnTruck load = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->load(static_cast<int>(i)),
      output);
  }

  // repeated .AQuery queries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->queries(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->simspeed(), output);
  }

  // optional bool disconnect = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disconnect(), output);
  }

  // repeated int64 acks = 7;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      7, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ACommands)
}

::google::protobuf::uint8* ACommands::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buy_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->buy(static_cast<int>(i)), target);
  }

  // repeated .APack topack = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topack_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->topack(static_cast<int>(i)), target);
  }

  // repeated .APutOnTruck load = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->load(static_cast<int>(i)), target);
  }

  // repeated .AQuery queries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->queries(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->simspeed(), target);
  }

  // optional bool disconnect = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disconnect(), target);
  }

  // repeated int64 acks = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(7, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ACommands)
  return target;
}

size_t ACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .APurchaseMore buy = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buy_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buy(static_cast<int>(i)));
    }
  }

  // repeated .APack topack = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->topack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->topack(static_cast<int>(i)));
    }
  }

  // repeated .APutOnTruck load = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->load_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->load(static_cast<int>(i)));
    }
  }

  // repeated .AQuery queries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->queries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->queries(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 simspeed = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const ACommands* source =
      ::google::protobuf::DynamicCastToGenerated<ACommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ACommands)
    MergeFrom(*source);
  }
}

void ACommands::MergeFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buy_.MergeFrom(from.buy_);
  topack_.MergeFrom(from.topack_);
  load_.MergeFrom(from.load_);
  queries_.MergeFrom(from.queries_);
  acks_.MergeFrom(from.acks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      simspeed_ = from.simspeed_;
    }
    if (cached_has_bits & 0x00000002u) {
      disconnect_ = from.disconnect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACommands::CopyFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->buy())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->topack())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->load())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->queries())) return false;
  return true;
}

void ACommands::Swap(ACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACommands::InternalSwap(ACommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&buy_)->InternalSwap(CastToBase(&other->buy_));
  CastToBase(&topack_)->InternalSwap(CastToBase(&other->topack_));
  CastToBase(&load_)->InternalSwap(CastToBase(&other->load_));
  CastToBase(&queries_)->InternalSwap(CastToBase(&other->queries_));
  acks_.InternalSwap(&other->acks_);
  swap(simspeed_, other->simspeed_);
  swap(disconnect_, other->disconnect_);
}

::google::protobuf::Metadata ACommands::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AResponses::InitAsDefaultInstance() {
}
class AResponses::HasBitSetters {
 public:
  static void set_has_finished(AResponses* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AResponses::kArrivedFieldNumber;
const int AResponses::kReadyFieldNumber;
const int AResponses::kLoadedFieldNumber;
const int AResponses::kFinishedFieldNumber;
const int AResponses::kErrorFieldNumber;
const int AResponses::kAcksFieldNumber;
const int AResponses::kPackagestatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AResponses::AResponses()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AResponses)
}
AResponses::AResponses(const AResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      arrived_(from.arrived_),
      ready_(from.ready_),
      loaded_(from.loaded_),
      error_(from.error_),
      acks_(from.acks_),
      packagestatus_(from.packagestatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:AResponses)
}

void AResponses::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AResponses_world_5famazon_2eproto.base);
  finished_ = false;
}

AResponses::~AResponses() {
  // @@protoc_insertion_point(destructor:AResponses)
  SharedDtor();
}

void AResponses::SharedDtor() {
}

void AResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AResponses& AResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AResponses_world_5famazon_2eproto.base);
  return *internal_default_instance();
}


void AResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrived_.Clear();
  ready_.Clear();
  loaded_.Clear();
  error_.Clear();
  acks_.Clear();
  packagestatus_.Clear();
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AResponses::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AResponses*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .APurchaseMore arrived = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APurchaseMore::_InternalParse;
          object = msg->add_arrived();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .APacked ready = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APacked::_InternalParse;
          object = msg->add_ready();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .ALoaded loaded = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ALoaded::_InternalParse;
          object = msg->add_loaded();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // optional bool finished = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_finished(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .AErr error = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AErr::_InternalParse;
          object = msg->add_error();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated int64 acks = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) == 48) {
          do {
            msg->add_acks(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 48 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_acks();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // repeated .APackage packagestatus = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::APackage::_InternalParse;
          object = msg->add_packagestatus();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore arrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APacked ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ALoaded loaded = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_loaded()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_finished(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AErr error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48u, input, this->mutable_acks())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APackage packagestatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packagestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AResponses)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arrived(static_cast<int>(i)),
      output);
  }

  // repeated .APacked ready = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ready_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ready(static_cast<int>(i)),
      output);
  }

  // repeated .ALoaded loaded = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loaded_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->loaded(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool finished = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->finished(), output);
  }

  // repeated .AErr error = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->error(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 6;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->acks(i), output);
  }

  // repeated .APackage packagestatus = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packagestatus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->packagestatus(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AResponses)
}

::google::protobuf::uint8* AResponses::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arrived(static_cast<int>(i)), target);
  }

  // repeated .APacked ready = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ready_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ready(static_cast<int>(i)), target);
  }

  // repeated .ALoaded loaded = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loaded_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->loaded(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool finished = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->finished(), target);
  }

  // repeated .AErr error = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->error(static_cast<int>(i)), target);
  }

  // repeated int64 acks = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(6, this->acks_, target);

  // repeated .APackage packagestatus = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packagestatus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->packagestatus(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AResponses)
  return target;
}

size_t AResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .APurchaseMore arrived = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arrived_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrived(static_cast<int>(i)));
    }
  }

  // repeated .APacked ready = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ready_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ready(static_cast<int>(i)));
    }
  }

  // repeated .ALoaded loaded = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->loaded_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->loaded(static_cast<int>(i)));
    }
  }

  // repeated .AErr error = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->error_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  // repeated .APackage packagestatus = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->packagestatus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packagestatus(static_cast<int>(i)));
    }
  }

  // optional bool finished = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const AResponses* source =
      ::google::protobuf::DynamicCastToGenerated<AResponses>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AResponses)
    MergeFrom(*source);
  }
}

void AResponses::MergeFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrived_.MergeFrom(from.arrived_);
  ready_.MergeFrom(from.ready_);
  loaded_.MergeFrom(from.loaded_);
  error_.MergeFrom(from.error_);
  acks_.MergeFrom(from.acks_);
  packagestatus_.MergeFrom(from.packagestatus_);
  if (from.has_finished()) {
    set_finished(from.finished());
  }
}

void AResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AResponses::CopyFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ready())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->loaded())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->error())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packagestatus())) return false;
  return true;
}

void AResponses::Swap(AResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AResponses::InternalSwap(AResponses* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&arrived_)->InternalSwap(CastToBase(&other->arrived_));
  CastToBase(&ready_)->InternalSwap(CastToBase(&other->ready_));
  CastToBase(&loaded_)->InternalSwap(CastToBase(&other->loaded_));
  CastToBase(&error_)->InternalSwap(CastToBase(&other->error_));
  acks_.InternalSwap(&other->acks_);
  CastToBase(&packagestatus_)->InternalSwap(CastToBase(&other->packagestatus_));
  swap(finished_, other->finished_);
}

::google::protobuf::Metadata AResponses::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_world_5famazon_2eproto);
  return ::file_level_metadata_world_5famazon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::AProduct* Arena::CreateMaybeMessage< ::AProduct >(Arena* arena) {
  return Arena::CreateInternal< ::AProduct >(arena);
}
template<> PROTOBUF_NOINLINE ::AInitWarehouse* Arena::CreateMaybeMessage< ::AInitWarehouse >(Arena* arena) {
  return Arena::CreateInternal< ::AInitWarehouse >(arena);
}
template<> PROTOBUF_NOINLINE ::AConnect* Arena::CreateMaybeMessage< ::AConnect >(Arena* arena) {
  return Arena::CreateInternal< ::AConnect >(arena);
}
template<> PROTOBUF_NOINLINE ::AConnected* Arena::CreateMaybeMessage< ::AConnected >(Arena* arena) {
  return Arena::CreateInternal< ::AConnected >(arena);
}
template<> PROTOBUF_NOINLINE ::APack* Arena::CreateMaybeMessage< ::APack >(Arena* arena) {
  return Arena::CreateInternal< ::APack >(arena);
}
template<> PROTOBUF_NOINLINE ::APacked* Arena::CreateMaybeMessage< ::APacked >(Arena* arena) {
  return Arena::CreateInternal< ::APacked >(arena);
}
template<> PROTOBUF_NOINLINE ::ALoaded* Arena::CreateMaybeMessage< ::ALoaded >(Arena* arena) {
  return Arena::CreateInternal< ::ALoaded >(arena);
}
template<> PROTOBUF_NOINLINE ::APutOnTruck* Arena::CreateMaybeMessage< ::APutOnTruck >(Arena* arena) {
  return Arena::CreateInternal< ::APutOnTruck >(arena);
}
template<> PROTOBUF_NOINLINE ::APurchaseMore* Arena::CreateMaybeMessage< ::APurchaseMore >(Arena* arena) {
  return Arena::CreateInternal< ::APurchaseMore >(arena);
}
template<> PROTOBUF_NOINLINE ::AErr* Arena::CreateMaybeMessage< ::AErr >(Arena* arena) {
  return Arena::CreateInternal< ::AErr >(arena);
}
template<> PROTOBUF_NOINLINE ::AQuery* Arena::CreateMaybeMessage< ::AQuery >(Arena* arena) {
  return Arena::CreateInternal< ::AQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::APackage* Arena::CreateMaybeMessage< ::APackage >(Arena* arena) {
  return Arena::CreateInternal< ::APackage >(arena);
}
template<> PROTOBUF_NOINLINE ::ACommands* Arena::CreateMaybeMessage< ::ACommands >(Arena* arena) {
  return Arena::CreateInternal< ::ACommands >(arena);
}
template<> PROTOBUF_NOINLINE ::AResponses* Arena::CreateMaybeMessage< ::AResponses >(Arena* arena) {
  return Arena::CreateInternal< ::AResponses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
